{"version":3,"sources":["history.js","components/Pagination.js","components/ListItem.js","components/List.js","components/Home.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Pagination","pages","i","this","rangeStart","rangeEnd","push","start","props","current","pageRange","end","totalPages","Math","ceil","total","perPage","page","onPageChanged","searchTerm","className","href","rel","hasPrev","onClick","e","changePage","prevPage","hasFirst","map","index","key","hasLast","hasNext","nextPage","Component","defaultProps","DownloadImage","open","closeOnDocumentClick","onClose","closeModal","stopPropagation","info","links","download","target","src","urls","full","alt","id","style","width","ListItem","state","openModal","bind","setState","photo","small","user","profile_image","portfolio_url","name","React","List","items","data","results","LOAD_STATE","Home","onChange","event","persist","debounceSearch","renderPagination","term","currentPage","totalPhotos","fetchPhotos","renderLoader","loadState","photos","renderError","whiteSpace","input","createRef","_","debounce","error","errorInfo","console","log","nextProps","nextState","length","search","self","options","params","client_id","query","per_page","axios","get","then","response","parseInt","headers","catch","err","value","type","placeholder","ref","renderHeader","NotFound","App","history","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.088a1c30.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import React, {Component, Fragment} from 'react';\r\n\r\nclass Pagination extends Component {\r\n  \r\n    pages() {\r\n      var pages = [];\r\n      for (var i = this.rangeStart(); i <= this.rangeEnd(); i++) {\r\n        pages.push(i)\r\n      };\r\n      return pages;\r\n    }\r\n  \r\n    rangeStart() {\r\n      var start = this.props.current - this.props.pageRange;\r\n      return (start > 0) ? start : 1\r\n    }\r\n  \r\n    rangeEnd() {\r\n      var end = this.props.current + this.props.pageRange;\r\n      var totalPages = this.totalPages();\r\n      return (end < totalPages) ? end : totalPages;\r\n    }\r\n  \r\n    totalPages() {\r\n      return Math.ceil(this.props.total / this.props.perPage);\r\n    }\r\n  \r\n    nextPage() {\r\n      return this.props.current + 1;\r\n    }\r\n  \r\n    prevPage() {\r\n      return this.props.current - 1;\r\n    }\r\n  \r\n    hasFirst() {\r\n      return this.rangeStart() !== 1\r\n    }\r\n  \r\n    hasLast() {\r\n      return this.rangeEnd() < this.totalPages();\r\n    }\r\n  \r\n    hasPrev() {\r\n      return this.props.current > 1;\r\n    }\r\n  \r\n    hasNext() {\r\n      return this.props.current < this.totalPages();\r\n    }\r\n  \r\n    changePage(page) {\r\n      this.props.onPageChanged(this.props.searchTerm,page);\r\n    }\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        <Fragment>\r\n          <div className=\"pagination\">\r\n            <div className=\"pagination__left\">\r\n              <a href=\"#\" rel=\"noopener noreferrer\" className={!this.hasPrev() ? 'hidden' : ''}\r\n                onClick={e => this.changePage(this.prevPage())}\r\n              >Prev</a>\r\n            </div>\r\n  \r\n            <div className=\"pagination__mid\">\r\n              <ul>\r\n                <li className={!this.hasFirst() ? 'hidden' : ''}>\r\n                  <a href=\"#\" rel=\"noopener noreferrer\" onClick={e => this.changePage(1)}>1</a>\r\n                </li>\r\n                <li className={!this.hasFirst() ? 'hidden' : ''}>...</li>\r\n                {\r\n                  this.pages().map((page, index) => {\r\n                    return (\r\n                      <li key={index}>\r\n                        <a href=\"#\" rel=\"noopener noreferrer\"\r\n                          onClick={e => this.changePage(page)}\r\n                          className={this.props.current === page ? 'current' : ''}\r\n                        >{page}</a>\r\n                      </li>\r\n                    );\r\n                  })\r\n                }\r\n                <li className={!this.hasLast() ? 'hidden' : ''}>...</li>\r\n                <li className={!this.hasLast() ? 'hidden' : ''}>\r\n                  <a href=\"#\" rel=\"noopener noreferrer\" onClick={e => this.changePage(this.totalPages())}>{this.totalPages()}</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n  \r\n            <div className=\"pagination__right\">\r\n              <a href=\"#\" rel=\"noopener noreferrer\" className={!this.hasNext() ? 'hidden' : ''}\r\n                onClick={e => this.changePage(this.nextPage())}\r\n              >Next</a>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n  \r\n  Pagination.defaultProps = {\r\n    pageRange: 3\r\n  }\r\n\r\n  export default Pagination;","import React from 'react';\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { IoMdDownload } from 'react-icons/io'\r\n\r\n\r\nconst DownloadImage = props => {\r\n  return (\r\n    <div>\r\n      <Popup\r\n        open={true}\r\n        closeOnDocumentClick\r\n        onClose={props.closeModal}\r\n      >\r\n        <div className=\"modal\">\r\n          <div onClick={(e) => e.stopPropagation()}>\r\n            <a\r\n              href={`${props.info.links.download}?force=true`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <IoMdDownload className=\"download__icon\" />\r\n            </a>\r\n            <img src={props.info.urls.full} alt={props.info.id} style={{ width: '100%' }} />\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass ListItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { open: false };\r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n  \r\n  openModal() {\r\n    this.setState({ open: true });\r\n  }\r\n  closeModal() {\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  render() {\r\n    const { photo } = this.props\r\n    return (\r\n      <div key={photo.id} className=\"grid__item card\">\r\n\r\n        <div className=\"unsplash__card__container\">\r\n          {this.state.open && <DownloadImage info={photo} open={this.openModal} closeModal={this.closeModal} />}\r\n          <img src={photo.urls.small} alt=\"\" onClick={() => this.setState({ open: true })} />\r\n        </div>\r\n        <div className=\"unsplash__footer unsplash__card__child__container\">\r\n          <img src={photo.user.profile_image.small} alt=\"\" className=\"unsplash__card__container__img\" />\r\n          <div className=\"unsplash__card__container__body\">\r\n            <span>Image By: </span>\r\n            <a href={photo.user.portfolio_url} target=\"_blank\" rel=\"noopener noreferrer\">{photo.user.name}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\n\r\nconst List = ({ data }) => {\r\n    const { results } = data;\r\n    var items = results.map(photo => <ListItem key={photo.id} photo={photo} />);\r\n    return (\r\n        <div className=\"grid\">\r\n            {items}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default List;","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport Pagination from './Pagination';\r\nimport List from './List';\r\nimport _ from 'lodash'\r\n\r\nconst LOAD_STATE = {\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR',\r\n    LOADING: 'LOADING'\r\n};\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            term: 'cars',\r\n            photos: [],\r\n            totalPhotos: 0,\r\n            perPage: 9,\r\n            currentPage: 1,\r\n            loadState: LOAD_STATE.LOADING\r\n        }\r\n        this.input = React.createRef();\r\n        this.debounceSearch = _.debounce(this.debounce, 1000)\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log('Error --> ', error)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPhotos(this.state.term, this.state.currentPage);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState.photos.length === 0 || nextState.loadState === 'LOADING') {\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    fetchPhotos(search, page) {\r\n        var self = this;\r\n        const { perPage } = this.state;\r\n        const appId = \"22b7b54287910389edfae878f576488bbc5b540a46daa0d2833ba858ce03b143\"\r\n        const baseUrl = 'https://api.unsplash.com/search/photos'\r\n        const options = {\r\n            params: {\r\n                client_id: appId,\r\n                query: search,\r\n                page: page,\r\n                per_page: perPage\r\n            }\r\n        };\r\n\r\n        this.setState({ loadState: LOAD_STATE.LOADING });\r\n        axios.get(baseUrl, options)\r\n            .then((response) => {\r\n                self.setState({\r\n                    photos: response.data,\r\n                    totalPhotos: parseInt(response.headers['x-total']),\r\n                    currentPage: page,\r\n                    loadState: LOAD_STATE.SUCCESS\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log('errror -->', err)\r\n                this.setState({ loadState: LOAD_STATE.ERROR });\r\n            });\r\n    }\r\n\r\n\r\n    debounce() {\r\n        this.setState({ term: this.input.current.value })\r\n        this.fetchPhotos(this.input.current.value, this.state.currentPage)\r\n    }\r\n\r\n    onChange = (event) => {\r\n        event.persist()\r\n        this.debounceSearch(event)\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"header\">\r\n                <a href=\"/\" className=\"logo\">Unsplash</a>\r\n                <div className=\"header-right\">\r\n                    <form>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            ref={this.input}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPagination = () => {\r\n        return (\r\n            <Pagination\r\n                searchTerm={this.state.term}\r\n                current={this.state.currentPage}\r\n                total={this.state.totalPhotos}\r\n                perPage={this.state.perPage}\r\n                onPageChanged={this.fetchPhotos.bind(this)}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderLoader = () => {\r\n        return (\r\n            this.state.loadState === LOAD_STATE.LOADING\r\n                ? <div className=\"loader\"></div>\r\n                : <List data={this.state.photos} />\r\n\r\n        )\r\n    }\r\n\r\n\r\n    renderError = () => {\r\n        return (\r\n            <div>\r\n                <h2>Something went wrong</h2>\r\n                <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                    Error\r\n                </details>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"app\">\r\n                    {this.renderHeader()}\r\n                    <div className=\"container\">\r\n                        {this.renderPagination()}\r\n                        {this.renderLoader()}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <div className=\"grid\">\r\n            Error: Route not supported\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","\n\nimport React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './history';\nimport Home from './components/Home';\nimport NotFound from './components/NotFound'\n\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <Router history={history}>\n                <div>\n                    <Switch>\n                        <Route path=\"/\" exact component={Home} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}